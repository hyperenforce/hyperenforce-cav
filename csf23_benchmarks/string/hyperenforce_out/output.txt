
/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/.eslintrc.json
  0:0  warning  File ignored by default.  Use a negated ignore pattern (like "--ignore-pattern '!<relative/path/to/filename>'") to override

/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/Distributor/src/Spawn.js
  99:21  warning  Unnecessary escape character: \/  no-useless-escape

âœ– 2 problems (0 errors, 2 warnings)

Building Libs
Successfully compiled 1 file with Babel (351ms).
Building Distributor
Successfully compiled 15 files with Babel (844ms).
Building Analyser
Successfully compiled 24 files with Babel (1420ms).
Building into
Bundling Analyser/bin/Analyser.js into bin/bundle.js
[+] ExpoSE /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js concurrent: 1 timeout: 7200000 per-test: 2400000
[-] [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ***[1000D[0K[\] [0 done /0 queued / 1 running / 0 errors / 0% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"_bound":0}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value true
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value string
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == true false boolean boolean
[?] Op == left {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":true,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was false, pushing not of (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing == string not_string string string
[?] Op == left {
    concrete: string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":32,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was false, pushing not of (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing == string string string string
[?] Op == left {
    concrete: string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":35,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was true, pushing (= str_test "string")
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:16:16:16:28)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:17:13:17:17)
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (not (= con_y false)),(not (= str_test "not_string")),(= str_test "string")
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-rD7pL9uU1RPR
[?] Checking if (not con_y) is satisfiable
[?] Satisfiable. Remembering new input: {
    con_y: false,
    str_test: ,
    _bound: 1
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-sEl04ojU83u9
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[?] Checking if (= str_test "not_string") is satisfiable
[?] Satisfiable. Remembering new input: {
    con_y: true,
    str_test: not_string,
    _bound: 2
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-sEl04ojU83u9
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert con_y)
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[?] Checking if (not (= str_test "string")) is satisfiable
[?] Satisfiable. Remembering new input: {
    con_y: true,
    str_test: $,
    _bound: 3
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-sEl04ojU83u9
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(declare-fun str_test () String)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert con_y)
(assert (not (= str_test
        (str.++ (seq.unit #x6e)
                (seq.unit #x6f)
                (seq.unit #x74)
                (seq.unit #x5f)
                (seq.unit #x73)
                (seq.unit #x74)
                (seq.unit #x72)
                (seq.unit #x69)
                (seq.unit #x6e)
                (seq.unit #x67)))))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-sEl04ojU83u9
[1000D[0K[|] [1 done /2 queued / 1 running / 0 errors / 27% coverage ] ***[1000D[0K[/] [1 done /2 queued / 1 running / 0 errors / 27% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"con_y":false,"str_test":"","_bound":1}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value false
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value 
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == false false boolean boolean
[?] Op == left {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":false,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was true, pushing (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing ==  not_string string string
[?] Op == left {
    concrete: ,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":31,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was false, pushing not of (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing ==  string string string
[?] Op == left {
    concrete: ,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":34,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was false, pushing not of (= str_test "string")
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (= con_y false),(not (= str_test "not_string")),(not (= str_test "string"))
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-I11O5tMsn52i
[?] Checking if (= str_test "not_string") is satisfiable
[?] Satisfiable. Remembering new input: {
    con_y: false,
    str_test: not_string,
    _bound: 2
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-UjPCKna0qNe5
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert (not con_y))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[?] Checking if (= str_test "string") is satisfiable
[?] Satisfiable. Remembering new input: {
    con_y: false,
    str_test: string,
    _bound: 3
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-UjPCKna0qNe5
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(declare-fun str_test () String)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert (not con_y))
(assert (not (= str_test
        (str.++ (seq.unit #x6e)
                (seq.unit #x6f)
                (seq.unit #x74)
                (seq.unit #x5f)
                (seq.unit #x73)
                (seq.unit #x74)
                (seq.unit #x72)
                (seq.unit #x69)
                (seq.unit #x6e)
                (seq.unit #x67)))))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-UjPCKna0qNe5
[1000D[0K[-] [2 done /3 queued / 1 running / 0 errors / 27% coverage ] ***[1000D[0K[\] [2 done /3 queued / 1 running / 0 errors / 27% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"con_y":true,"str_test":"not_string","_bound":2}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value true
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value not_string
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == true false boolean boolean
[?] Op == left {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":true,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was false, pushing not of (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing == not_string not_string string string
[?] Op == left {
    concrete: not_string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"not_string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":32,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was true, pushing (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing == not_string string string string
[?] Op == left {
    concrete: not_string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"not_string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":34,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was false, pushing not of (= str_test "string")
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (not (= con_y false)),(= str_test "not_string"),(not (= str_test "string"))
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-87qcHf0KTYLp
[?] Checking if (= str_test "string") is satisfiable
[?] (= str_test "string") is not satisfiable
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(declare-fun str_test () String)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert con_y)
(assert (= str_test
   (str.++ (seq.unit #x6e)
           (seq.unit #x6f)
           (seq.unit #x74)
           (seq.unit #x5f)
           (seq.unit #x73)
           (seq.unit #x74)
           (seq.unit #x72)
           (seq.unit #x69)
           (seq.unit #x6e)
           (seq.unit #x67))))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-0A0ox36AYU3S
[1000D[0K[|] [3 done /2 queued / 1 running / 0 errors / 27% coverage ] ***[1000D[0K[/] [3 done /2 queued / 1 running / 0 errors / 27% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"con_y":false,"str_test":"not_string","_bound":2}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value false
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value not_string
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == false false boolean boolean
[?] Op == left {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":false,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was true, pushing (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing == not_string not_string string string
[?] Op == left {
    concrete: not_string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"not_string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":31,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was true, pushing (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing == not_string string string string
[?] Op == left {
    concrete: not_string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"not_string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":33,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was false, pushing not of (= str_test "string")
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (= con_y false),(= str_test "not_string"),(not (= str_test "string"))
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-hNLEynF659JG
[?] Checking if (= str_test "string") is satisfiable
[?] (= str_test "string") is not satisfiable
[?] Solver {
(declare-fun str.isWhite (String) Bool)
(declare-fun con_y () Bool)
(declare-fun str_test () String)
(define-funs-rec ( ( str.repeat ((x!1 String) (x!2 Int)) String)
                   ( str.whiteLeft ((x!1 String) (x!2 Int)) Int)
                   ( str.whiteRight ((x!1 String) (x!2 Int)) Int))
                 ( (ite (<= x!2 0)
                        ""
                        (str.++ x!1 ((_ str.repeat 0) x!1 (- x!2 1))))
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteLeft 0) x!1 (+ x!2 1))
                        x!2)
                   (ite (= (str.at x!1 x!2) " ")
                        ((_ str.whiteRight 0) x!1 (- x!2 1))
                        x!2)))
(assert (not con_y))
(assert (= str_test
   (str.++ (seq.unit #x6e)
           (seq.unit #x6f)
           (seq.unit #x74)
           (seq.unit #x5f)
           (seq.unit #x73)
           (seq.unit #x74)
           (seq.unit #x72)
           (seq.unit #x69)
           (seq.unit #x6e)
           (seq.unit #x67))))
(model-add str.isWhite ((x!1 String)) Bool (= x!1 " "))
}
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-br8enq0Q7KsA
[1000D[0K[-] [4 done /1 queued / 1 running / 0 errors / 27% coverage ] ***[1000D[0K[\] [4 done /1 queued / 1 running / 0 errors / 27% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"con_y":true,"str_test":"$","_bound":3}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value true
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value $
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == true false boolean boolean
[?] Op == left {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":true,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was false, pushing not of (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing == $ not_string string string
[?] Op == left {
    concrete: $,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"$","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":32,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was false, pushing not of (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing == $ string string string
[?] Op == left {
    concrete: $,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"$","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":35,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was false, pushing not of (= str_test "string")
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (not (= con_y false)),(not (= str_test "not_string")),(not (= str_test "string"))
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-XKw4cfJvdrUn
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-j0RpjuJxE4wF
[1000D[0K[|] [5 done /0 queued / 1 running / 0 errors / 27% coverage ] ***[1000D[0K[/] [5 done /0 queued / 1 running / 0 errors / 27% coverage ] ***[?] Built with VERY logging enabled
[?] Built with FINE logging enabled
[!] Built with BASE logging enabled
[!] Intial Input {"con_y":false,"str_test":"string","_bound":3}
Transforming
[!] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[?] decl S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] decl str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:1:1:19:20)
[?] Read require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:17)
[?] Execute function require at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] require unmodeled
[?] TODO: IsNative Uncached
Transforming
[?] ====== ENTERING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] decl AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:1:1:74:32)
[?] Write AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:8:21:8:23)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:14)
[?] Put field {
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:13:1:13:28)
[?] PutField [object Object] at existing
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:18:14)
[?] Put field {
    existing: {
}
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:1:26:2)
[?] PutField [object Object] at rename
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:28:14)
[?] Put field {
    existing: {
},
    rename: anonymous
}[assume] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:28:1:32:2)
[?] PutField [object Object] at assume
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:37:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:1:43:2)
[?] PutField [object Object] at symbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:45:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous
}[pureSymbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:45:1:47:2)
[?] PutField [object Object] at pureSymbol
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:14)
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:43)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:51)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[notAnError] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:62)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:37:52:64)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous
}[NotAnErrorException] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:52:1:52:64)
[?] PutField [object Object] at NotAnErrorException
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:57:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException
}[fail] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:57:1:59:2)
[?] PutField [object Object] at fail
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:65:14)
[?] Put field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous
}[assert] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:65:1:72:2)
[?] PutField [object Object] at assert
[?] Read module at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:7)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:18:74:31)
[?] Put field {
    id: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src,
    exports: {
},
    parent: {
        id: .,
        path: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string,
        exports: Max Depth,
        parent: null,
        filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js,
        loaded: false,
        children: Max Depth,
        paths: Max Depth,
        load: anonymous,
        require: anonymous,
        _compile: anonymous
},
    filename: /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js,
    loaded: false,
    children: [],
    paths: [/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/node_modules, /Users/tzuhan/+research/hyper_enforce/HyperEnforce/node_modules, /Users/tzuhan/+research/hyper_enforce/node_modules, /Users/tzuhan/+research/node_modules, /Users/tzuhan/node_modules, /Users/node_modules, /node_modules],
    load: anonymous,
    require: anonymous,
    _compile: anonymous
}[exports] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:74:1:74:31)
[?] PutField [object Object] at exports
[?] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js depth 1 ======
[?] Exit function (require) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Write S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:2:10:2:23)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:15)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:22)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left true result boolean
[?] Op !== left boolean right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
}[con_y] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at con_y
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"con_y","1":true} con_y true
[?] Initializing fresh symbolic variable con_y using concrete value false
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:6:13:6:37)
[?] Read S$ at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:18)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[symbol] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:25)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] decl c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:16:38:17)
[?] Unary typeof left string result string
[?] Op !== left string right undefined result_c true at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:38:9:38:33)
[?] Evaluating conditional true
[?] Read Object at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:22)
[?] Get field Object[_expose] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:30)
[?] Get field {
    makeSymbolic: anonymous,
    notAnError: anonymous,
    pureSymbol: anonymous
}[makeSymbolic] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:43)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:57)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[rename] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:64)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:65:39:69)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Entering anonymous near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl arguments at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] decl name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:23)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:32)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:33:19:37)
[?] Get field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:19:10:19:38)
[?] Unary ! left undefined result true
[?] Evaluating conditional true
[?] Read AssertToolkit at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:22)
[?] Get field {
    existing: {
        con_y: 1
},
    rename: anonymous,
    assume: anonymous,
    symbol: anonymous,
    pureSymbol: anonymous,
    NotAnErrorException: NotAnErrorException,
    fail: anonymous,
    assert: anonymous
}[existing] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:31)
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:32:20:36)
[?] Put field {
    con_y: 1
}[str_test] at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:20:9:20:41)
[?] PutField [object Object] at str_test
[?] Read name at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:21:16:21:20)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:18:24:26:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:44:39:70)
[?] Read c at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:72:39:73)
[?] Execute function anonymous at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?]  unmodeled
[?] TODO: IsNative Uncached
[?] Args {"0":"str_test","1":"string"} str_test string
[?] Initializing fresh symbolic variable str_test using concrete value string
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:39:16:39:74)
[?] Exiting function (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/1_buildModel/lib/S$/src/symbols.js:37:24:43:2)
[?] Exit function (anonymous) near (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:7:16:7:47)
[?] Read con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:10)
[?] Not concretizing == false false boolean boolean
[?] Op == left {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right false result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Symbolic Binary: {"0":"==","1":false,"2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":25,"_ptr":true},"_fields":[],"checks":[]},"3":false,"4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":29,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= con_y false) at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:10:5:10:19)
[?] Concrete result was true, pushing (= con_y false)
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:13)
[?] Not concretizing == string not_string string string
[?] Op == left {
    concrete: string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right not_string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Symbolic Binary: {"0":"==","1":"string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"not_string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":31,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: false,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "not_string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:11:5:11:29)
[?] Concrete result was false, pushing not of (= str_test "not_string")
[?] Read str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:13)
[?] Not concretizing == string string string string
[?] Op == left {
    concrete: string,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
} right string result_c undefined at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Symbolic Binary: {"0":"==","1":"string","2":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":28,"_ptr":true},"_fields":[],"checks":[]},"3":"string","4":{"context":{"ctx":{"id":1,"_ptr":true}},"ast":{"id":34,"_ptr":true},"_fields":[],"checks":[]}}
[?] Evaluating conditional {
    concrete: true,
    symbolic: {
        context: Max Depth,
        ast: Max Depth,
        _fields: Max Depth,
        checks: Max Depth
},
    _arrayType: undefined
}
[?] Evaluating symbolic condition (= str_test "string") at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:15:5:15:25)
[?] Concrete result was true, pushing (= str_test "string")
[?] Write str_test at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:16:16:16:28)
[?] Write con_y at (/Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js:17:13:17:17)
[!] ====== EXITING SCRIPT /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js depth 0 ======
[!] Finished play with PC (= con_y false),(not (= str_test "not_string")),(= str_test "string")
[!] Wrote final coverage to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-NpyewCQoCi55
[!] Wrote final output to /var/folders/z1/vfgxsshx1fz7lks_0jxxbrwr0000gn/T/tmp-32284-bDJWMBpxyf8w
[1000D[0K[-] [6 done /0 queued / 0 running / 0 errors / 27% coverage ] ***
[+] {"_bound":0,"con_y":true,"str_test":"string"} took 2.92s
[+] {"con_y":false,"str_test":"","_bound":1} took 2.913s
[+] {"con_y":true,"str_test":"not_string","_bound":2} took 2.748s
[+] {"con_y":false,"str_test":"not_string","_bound":2} took 2.75s
[+] {"con_y":true,"str_test":"$","_bound":3} took 2.74s
[+] {"con_y":false,"str_test":"string","_bound":3} took 2.76s
[!] Stats
[+] General Function Call: 48
[+] Symbolic Values: 12
[+] Symbolic Primitives: 12
[+] Wrapped Constants: 18
[+] Symbolic Binary: 18
[+] Max Queries (Any): 1
[+] Max Queries (Succesful): 1
[+] Failed Queries: 2
[!] Done
[+] /Users/tzuhan/+research/hyper_enforce/HyperEnforce/csf23_benchmarks/string/string_extended.js. Coverage (Term): 93% Coverage (Decisions): 100% Coverage (LOC): 100% Lines Of Code: 17 -*
[+] Total Lines Of Code 17
[+] Total Coverage: 1%
[+] EXPOSE_PRINT_COVERAGE=1 for line by line breakdown
[+] ExpoSE Finished. 6 paths, 0 errors
