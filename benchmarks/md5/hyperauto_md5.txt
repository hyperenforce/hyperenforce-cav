#
#
#
"""
A hyper automaton Forall pi Forall pi'. if input text matches, then the output hex must also match
"""
# Plant output type
# Forall quantifier

pt_enc = DataTypeEncoding(pt)
quants = (2,)
h = SymbolicHyperAutomaton(quants, pt, pt_enc)

true_form = lambda v1, v2: TRUE
inputs_match = lambda v1, v2: lambda v1, v2: (pt_enc.same_var_form(v1, v2, 'ucon_str_plainText'))
wait_outputs = lambda v1, v2: NOT(OR(pt_enc.encodes_var_form(v1, PC='285'), pt_enc.encodes_var_form(v2, PC='285')))
end_condition = lambda v1, v2: AND(pt_enc.same_var_form(v1, v2, 'con_str_output_hex'), AND(pt_enc.encodes_var_form(v1, PC='285'),pt_enc.encodes_var_form(v2, PC='285')))


h.add_vertices(3, )
h.initial_state_indices = [0]
h.vs["marked"] = True

h.add_edge(0, 1, true_form)
h.add_edge(1, 1, wait_outputs)
h.add_edge(1, 2, end_condition)
