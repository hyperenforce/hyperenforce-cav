{"8":[40,6,40,12],"9":[15,10,18,2],"10":[34,13,34,23],"16":[46,6,46,12],"17":[15,10,18,2],"18":[34,25,34,28],"24":[34,13,34,23],"25":[15,10,18,2],"33":[15,10,18,2],"34":[34,25,34,28],"41":[15,10,18,2],"42":[36,14,36,33],"49":[15,10,18,2],"50":[37,14,37,33],"57":[15,10,18,2],"58":[38,14,38,33],"65":[15,1,18,2],"66":[49,50,49,78],"73":[21,15,21,16],"74":[49,27,49,79],"81":[21,15,21,16],"82":[53,44,53,73],"89":[21,15,21,16],"90":[53,24,53,74],"97":[22,24,22,25],"98":[55,13,55,24],"105":[22,24,22,25],"106":[57,19,57,37],"113":[22,24,22,25],"114":[64,58,64,91],"121":[23,27,23,28],"122":[64,58,64,113],"129":[23,27,23,28],"130":[67,25,67,58],"137":[23,27,23,28],"145":[24,22,24,23],"153":[24,22,24,23],"161":[24,22,24,23],"169":[25,27,25,28],"177":[25,27,25,28],"185":[25,27,25,28],"193":[28,9,28,13],"201":[28,9,28,19],"203":[28,9,28,17],"209":[28,9,28,19],"217":[28,1,28,20],"225":[34,10,34,11],"233":[34,10,34,11],"241":[34,13,34,14],"249":[34,18,34,23],"265":[34,25,34,26],"273":[34,25,34,28],"289":[36,14,36,18],"297":[36,14,36,27],"299":[36,14,36,25],"305":[36,30,36,33],"313":[36,14,36,33],"321":[36,3,36,34],"329":[37,14,37,18],"337":[37,14,37,27],"339":[37,14,37,25],"345":[37,30,37,33],"353":[37,14,37,33],"361":[37,3,37,34],"369":[38,14,38,18],"377":[38,14,38,27],"379":[38,14,38,25],"385":[38,30,38,33],"393":[38,14,38,33],"401":[38,3,38,34],"409":[40,6,40,12],"417":[41,14,41,18],"425":[41,14,41,18],"433":[41,5,41,18],"441":[44,14,44,19],"449":[44,14,44,19],"457":[44,5,44,19],"465":[46,6,46,12],"473":[47,23,47,27],"481":[47,23,47,33],"483":[47,23,47,31],"489":[47,23,47,33],"497":[47,5,47,33],"505":[48,13,48,18],"513":[48,13,48,18],"521":[48,5,48,18],"529":[49,27,49,46],"537":[49,50,49,54],"545":[49,50,49,60],"547":[49,50,49,58],"553":[49,63,49,78],"561":[49,27,49,79],"569":[49,5,49,79],"577":[51,24,51,28],"585":[51,24,51,34],"587":[51,24,51,32],"593":[51,24,51,34],"601":[51,5,51,34],"609":[52,13,52,19],"617":[52,20,52,26],"625":[52,28,52,34],"633":[52,36,52,41],"641":[52,13,52,42],"649":[52,13,52,42],"657":[52,5,52,42],"665":[53,24,53,40],"673":[53,44,53,48],"681":[53,44,53,54],"683":[53,44,53,52],"689":[53,57,53,73],"697":[53,24,53,74],"705":[53,5,53,74],"713":[55,13,55,20],"721":[55,23,55,24],"729":[55,13,55,24],"737":[55,3,55,24],"745":[57,19,57,23],"753":[57,19,57,29],"755":[57,19,57,27],"761":[57,32,57,37],"769":[57,19,57,37],"777":[57,1,57,38],"785":[63,1,63,8],"793":[63,58,63,72],"801":[63,1,63,75],"803":[63,1,63,12],"809":[63,1,63,76],"817":[64,1,64,8],"825":[64,58,64,72],"833":[64,75,64,91],"841":[64,94,64,113],"849":[64,1,64,116],"851":[64,1,64,12],"857":[64,1,64,117],"865":[65,1,65,8],"873":[65,58,65,74],"881":[65,1,65,77],"883":[65,1,65,12],"889":[65,1,65,78],"897":[67,1,67,8],"905":[67,25,67,41],"913":[67,44,67,58],"921":[67,68,67,69],"929":[67,24,67,70],"931":[67,24,67,67],"937":[67,1,67,76],"939":[67,1,67,12],"945":[67,1,67,77],"953":[69,1,69,8],"961":[69,1,69,99],"963":[69,1,69,12],"969":[69,1,69,100],"977":[1,1,128,1],"985":[1,1,128,1],"993":[1,1,128,1],"1001":[1,1,128,1],"1009":[1,1,128,1],"1017":[1,1,128,1],"1025":[1,1,128,1],"1033":[1,1,128,1],"1041":[1,1,128,1],"1049":[1,1,128,1],"1057":[1,1,128,1],"1065":[1,1,128,1],"1073":[15,10,18,2],"1081":[15,10,18,2],"1089":[40,3,45,4],"1097":[46,3,54,4],"1105":[34,1,56,2],"1113":[34,1,56,2],"1121":[34,1,56,2],"1129":[1,1,128,1],"1137":[1,1,128,1],"nBranches":6,"originalCodeFileName":"/Users/tzuhan/+research/hyper_enforce/model_builder/jalangi2/hyperenforce_cases/implicit2/implicit2_enforced.js","instrumentedCodeFileName":"/Users/tzuhan/+research/hyper_enforce/model_builder/jalangi2/hyperenforce_cases/implicit2/implicit2_enforced_jalangi_.js","code":"var ucon_x;\nvar ucon_z;\nvar con_y;\n //if z is true, we suppress, if false we don't\n // no matter x us true or false\nvar t0;\nvar t1;\nvar i;\n\n/*\n node src/js/commands/jalangi.js --inlineIID --inlineSource --analysis src/js/sample_analyses/pldi16/SkipFunction.js tests/pldi16/SkipFunctionTest.js\n */\n\n/* added functions by the controller */\nsupp_0 = function (ucon_x, ucon_z, con_y) {\n  // console.log('decide to suppress or not')\n  // total_time = total_time + (Date.now() - t0)\n}\n\n\nvar counter = 0;\nvar total_monitoring = 0;\nvar total_no_monitoring = 0;\nvar total_exectime = 0;\nvar normalized_overhead = 0;\n\n\nstart = Date.now();\n\n// for (i = 1; i <= 5000000; i++){\n//   ucon_x = true\n// }\n\nfor (i = 1; i <= 10000; i++) {\n  /* VARS */\n  ucon_x  = (Math.random() < 0.5)\n  con_y   = (Math.random() < 0.5)\n  ucon_z  = (Math.random() < 0.5)\n  /* MAIN JS PROGRAM */\n  if(ucon_z){\n    ucon_x = true\n  }\n  else{\n    ucon_x = false\n  }\n  if(ucon_x){\n    nomonitor_time0 = Date.now()\n    con_y = false\n    total_no_monitoring = total_no_monitoring + (Date.now() - nomonitor_time0)\n\n    monitoring_time0 = Date.now()\n    con_y = supp_0(ucon_x, ucon_z, con_y)\n    total_monitoring = total_monitoring + (Date.now() - monitoring_time0)\n  }\n  counter = counter + 1\n}\ntotal_exectime = (Date.now() - start)\n\n// normalized_overhead = (total_monitoring_overhead) / (total_time + total_monitoring_overhead)\n// total_exectime = total_exectime - total_monitoring\n// normalized_overhead = (((total_monitoring)) / (total_exectime - (total_exectime - total_monitoring))) * 100\n\nconsole.log(`Total execution time w/ monitoring:  X1 = ${total_exectime}`);\nconsole.log(`Total execution time w/o monitoring: X2 = ${total_exectime - total_monitoring + total_no_monitoring}`);\nconsole.log(`Total monitoring time:               X3 = ${total_monitoring}`);\n\nconsole.log(`X3/X1 = ${(total_monitoring / total_exectime).toFixed(2)} %` );\n\nconsole.log(`Normalized overhead should be something like: ((X - X_min) / (X_max - X_min)) * 100`);\n\n\n// console.log(`${(normalized_overhead).toFixed(2)} % for ${counter} iterations.`);\n\n\n/// END OF FILE ///\n\n//\n//\n//\n// (function (sandbox) {\n//     function MyAnalysis() {\n//         // this.invokeFunPre = function (iid, f, base, args, isConstructor, isMethod, functionIid, functionSid) {\n//         //     // if (typeof f === \"function\") {\n//         //         if (f === supp_0){\n//         //           // console.log('check supp_0, incokeFunPre')\n//         //           // console.log(args);\n//         //         }\n//         //         // else if (f === checkvalues){\n//         //         //   console.log('(checkvalues Pre)');\n//         //         //   console.log('debugging values')\n//         //         //   console.log(args)\n//         //         // }\n//         //     // }\n//         // };\n//         this.invokeFun = function\t(iid,\tf,\tbase,\targs,\tresult,\tisConstructor,\tisMethod,\tfunctionIid) {\n//           if (typeof f === \"function\"){\n//             if (f == supp_0){\n//               prev_memory_con_y = (args[2])\n//               // console.log('check supp_0, incokeFun');\n//               // console.log(args);\n//\n//               to_suppress_0 = (args[1])\n//               // this will be decided by the grouped predicates.\n//               // if we suppress this PC or not\n//\n//               // return {f: f, base: base, args: args, result: prev_memory_con_y}\n//               // here we evaluate if a suppress needs to be imposexwxw\n//               if(to_suppress_0){\n//                 // suppress, pass the previous values in the memory\n//                 console.log('=== suppress!! ===')\n//                 return {f: f, base: base, args: args, result: prev_memory_con_y}\n//               }\n//               else{\n//                 // original operation\n//                 console.log('=== no suppress ===')\n//                 return {f: f, base: base, args: args, result: false};\n//               }\n//             }\n//             // else if (f == checkvalues){\n//             //   return {f: f, base: base, args: args, result: 'normal function call.'}\n//             // }\n//           }\n//         };\n//     }\n//     sandbox.analysis = new MyAnalysis();\n// }\n// (J$));\n"}